[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex dd60cf9..b983d61 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -101,6 +101,7 @@[m
           </dependency>[m
           </dependencies>[m
           <configuration>[m
[32m+[m[32m            <argLine>-Xmx1024m</argLine>[m
             <parallel>all</parallel>[m
             <reportFormat>plain</reportFormat>[m
             <consoleOutputReporter>[m
[1mdiff --git a/rest.http b/rest.http[m
[1mindex df1f9ee..d8cd840 100644[m
[1m--- a/rest.http[m
[1m+++ b/rest.http[m
[36m@@ -24,7 +24,7 @@[m [mAccept: application/json[m
 Content-Type: application/json[m
 [m
 {[m
[31m-  "alias": "foo",[m
[32m+[m[41m [m
   "realName": "Alex Admin ddbbb",[m
   "dateOfBirth": "1987-07-22",[m
   "gender": "Male",[m
[1mdiff --git a/src/main/java/com/abach42/superhero/config/ExceptionHandlerAdvice.java b/src/main/java/com/abach42/superhero/config/ExceptionHandlerAdvice.java[m
[1mindex 0e7ef77..8b236c4 100644[m
[1m--- a/src/main/java/com/abach42/superhero/config/ExceptionHandlerAdvice.java[m
[1m+++ b/src/main/java/com/abach42/superhero/config/ExceptionHandlerAdvice.java[m
[36m@@ -3,6 +3,7 @@[m [mpackage com.abach42.superhero.config;[m
 import java.util.Optional;[m
 [m
 import org.springframework.http.HttpStatus;[m
[32m+[m[32mimport org.springframework.http.HttpStatusCode;[m
 import org.springframework.http.ResponseEntity;[m
 import org.springframework.validation.FieldError;[m
 import org.springframework.web.ErrorResponse;[m
[36m@@ -23,7 +24,8 @@[m [mpublic class ExceptionHandlerAdvice {[m
     @ResponseStatus(HttpStatus.UNPROCESSABLE_ENTITY)[m
     public ResponseEntity<ErrorDetailedDto> handleMethodArgumentNotValid(MethodArgumentNotValidException exception,[m
             ServletWebRequest request) {[m
[31m-        ErrorDetailedDto errorDetailedResponse = new ErrorDetailedDto(getStatusCodeNumber(exception), getError(exception), [m
[32m+[m[32m        HttpStatus httpStatus = HttpStatus.UNPROCESSABLE_ENTITY;[m
[32m+[m[32m        ErrorDetailedDto errorDetailedResponse = new ErrorDetailedDto(getStatusCodeNumber(httpStatus), getError(httpStatus),[m[41m [m
                 getMessage(exception), getPath(request));[m
     [m
         for (FieldError fieldError : exception.getBindingResult().getFieldErrors()) {[m
[36m@@ -37,19 +39,23 @@[m [mpublic class ExceptionHandlerAdvice {[m
     @ExceptionHandler(ApiException.class)[m
     public ResponseEntity<ErrorDto> handle(ApiException exception, ServletWebRequest request) {[m
         return new ResponseEntity<>([m
[31m-            new ErrorDto(getStatusCodeNumber(exception), getError(exception), getMessage(exception), getPath(request)),         [m
[32m+[m[32m            new ErrorDto(getStatusCodeNumber(exception.getStatusCode()), getError(exception), getMessage(exception), getPath(request)),[m[41m         [m
                 exception.getStatusCode());[m
     }[m
 [m
[31m-    private int getStatusCodeNumber(ErrorResponse exception) {[m
[31m-        return exception.getStatusCode().value();[m
[32m+[m[32m    private int getStatusCodeNumber(HttpStatusCode httpStatus) {[m
[32m+[m[32m        return httpStatus.value();[m
     }[m
 [m
     private String getError(ErrorResponse exception) {[m
[31m-        return Optional.of(HttpStatus.resolve(getStatusCodeNumber(exception)))[m
[32m+[m[32m        return Optional.of(HttpStatus.resolve(getStatusCodeNumber(exception.getStatusCode())))[m
                 .map(HttpStatus::getReasonPhrase).orElse("Unknown error");[m
     }[m
 [m
[32m+[m[32m    private String getError(HttpStatus httpStatus) {[m
[32m+[m[32m        return httpStatus.getReasonPhrase();[m
[32m+[m[32m    }[m
[32m+[m
     private String getMessage(ErrorResponse exception) {[m
         return exception.getBody().getDetail();[m
     }[m
[1mdiff --git a/src/main/java/com/abach42/superhero/entity/dto/SuperheroDto.java b/src/main/java/com/abach42/superhero/entity/dto/SuperheroDto.java[m
[1mindex b171c07..6c0bfad 100644[m
[1m--- a/src/main/java/com/abach42/superhero/entity/dto/SuperheroDto.java[m
[1m+++ b/src/main/java/com/abach42/superhero/entity/dto/SuperheroDto.java[m
[36m@@ -10,6 +10,7 @@[m [mimport io.swagger.v3.oas.annotations.media.Schema;[m
 import io.swagger.v3.oas.annotations.media.Schema.AccessMode;[m
 import jakarta.validation.constraints.NotNull;[m
 import jakarta.validation.constraints.Null;[m
[32m+[m[32mimport jakarta.validation.constraints.Size;[m
 [m
 @Schema(name = "sperhero")[m
 public record SuperheroDto([m
[36m@@ -30,6 +31,7 @@[m [mpublic record SuperheroDto([m
     )[m
     @NotNull(groups = OnCreate.class)[m
     @Null(groups = OnUpdate.class)[m
[32m+[m[32m    @Size(max = 20, groups = {OnCreate.class, OnUpdate.class})[m
     String alias,[m
 [m
     @Schema([m
[1mdiff --git a/src/main/resources/application-test.yaml b/src/main/resources/application-test.yaml[m
[1mindex 6e4b93e..7269820 100644[m
[1m--- a/src/main/resources/application-test.yaml[m
[1m+++ b/src/main/resources/application-test.yaml[m
[36m@@ -22,4 +22,12 @@[m [mabach42:[m
     superhero:[m
         oci:[m
             testcontainer:[m
[31m-                imageName: postgres:latest[m
\ No newline at end of file[m
[32m+[m[32m                imageName: postgres:latest[m
[32m+[m[32mjunit:[m
[32m+[m[32m    jupiter:[m
[32m+[m[32m        execution:[m[41m [m
[32m+[m[32m            parallel:[m
[32m+[m[32m                mode:[m
[32m+[m[32m                    default: concurrent[m
[32m+[m[32m                    classes:[m
[32m+[m[32m                        default: concurrent[m
\ No newline at end of file[m
[1mdiff --git a/src/main/resources/db/changelog/db.changelog-1.0.yml b/src/main/resources/db/changelog/db.changelog-1.0.yml[m
[1mindex c069b0c..d2a7768 100644[m
[1m--- a/src/main/resources/db/changelog/db.changelog-1.0.yml[m
[1m+++ b/src/main/resources/db/changelog/db.changelog-1.0.yml[m
[36m@@ -53,6 +53,11 @@[m [mdatabaseChangeLog:[m
                   name: deleted[m
                   type: BOOLEAN[m
                   constraints:[m
[31m-                    default: false[m
[32m+[m[32m                    nullable: false[m
[32m+[m[32m        - addDefaultValue:[m
[32m+[m[32m            columnDataType: boolean[m
[32m+[m[32m            columnName: deleted[m
[32m+[m[32m            defaultValueBoolean: false[m
[32m+[m[32m            tableName: superhero[m
               [m
                                       [m
\ No newline at end of file[m
[1mdiff --git a/src/main/resources/db/changelog/db.changelog-1.1.yml b/src/main/resources/db/changelog/db.changelog-1.1.yml[m
[1mindex eedc847..b013717 100644[m
[1m--- a/src/main/resources/db/changelog/db.changelog-1.1.yml[m
[1m+++ b/src/main/resources/db/changelog/db.changelog-1.1.yml[m
[36m@@ -4,7 +4,7 @@[m [mdatabaseChangeLog:[m
         author: me[m
         changes:[m
             - insert:[m
[31m-                tableName:  superhero[m
[32m+[m[32m                tableName: superhero[m
                 columns:[m
                     - column:[m
                         name: id[m
[1mdiff --git a/src/test/java/com/abach42/superhero/integration/configuration/TestContainerConfiguration.java b/src/test/java/com/abach42/superhero/integration/configuration/TestContainerConfiguration.java[m
[1mindex 6cf2e5d..7a7cf33 100644[m
[1m--- a/src/test/java/com/abach42/superhero/integration/configuration/TestContainerConfiguration.java[m
[1m+++ b/src/test/java/com/abach42/superhero/integration/configuration/TestContainerConfiguration.java[m
[36m@@ -8,7 +8,6 @@[m [mimport org.testcontainers.containers.PostgreSQLContainer;[m
 [m
 @TestConfiguration[m
 public class TestContainerConfiguration {[m
[31m-    //TODO check this[m
     @Value("${abach42.superhero.oci.testcontainer.imageName:postgres:latest}")[m
     private String dockerImageName;[m
 [m
